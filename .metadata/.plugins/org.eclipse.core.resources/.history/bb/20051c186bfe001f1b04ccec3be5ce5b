package com.gildedrose;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

class GildedRoseTest {

    @Test
    void foo() {
        Item[] items = new Item[] { new Item("foo", 0, 0) };
        GildedRose app = new GildedRose(items);
        app.updateQuality();
        assertEquals("foo", app.items[0].name);
    }
    
    @Test
    void decrementarQuality() {
        Item[] items = new Item[] { new Item("Elixir of the Mongoose", 10, 30) };
        GildedRose app = new GildedRose(items);
        app.updateQuality();
        assertEquals(9, app.items[0].sellIn);
        assertEquals(29, app.items[0].quality);
    }
   
    @Test
    void qualityPositivo() {
        Item[] items = new Item[] { new Item("Elixir of the Mongoose", 10, 0) };
        GildedRose app = new GildedRose(items);
        app.updateQuality();
        assertEquals(9, app.items[0].sellIn);
        assertEquals(0, app.items[0].quality);
    }
 
//    @Test
//    void max50AgedBrie() {
//        Item[] items = new Item[] { new Item("Aged Brie", 10, 50) };
//        GildedRose app = new GildedRose(items);
//        app.updateQuality();
//        assertEquals(9, app.items[0].sellIn);
//        assertEquals(50, app.items[0].quality);
//    }
//    
//    @Test
//    void incrementar2() {
//        Item[] items = new Item[] { new Item("Backstage passes to a TAFKAL80ETC concert", 10, 40) };
//        GildedRose app = new GildedRose(items);
//        app.updateQuality();
//        assertEquals(9, app.items[0].sellIn);
//        assertEquals(42, app.items[0].quality);
//    }
//    
//    @Test
//    void incrementar3() {
//        Item[] items = new Item[] { new Item("Backstage passes to a TAFKAL80ETC concert", 4, 40) };
//        GildedRose app = new GildedRose(items);
//        app.updateQuality();
//        assertEquals(3, app.items[0].sellIn);
//        assertEquals(43, app.items[0].quality);
//    }
//    
//    @Test
//    void agedBrieIncrementar3() {
//        Item[] items = new Item[] { new Item("Aged Brie", 2, 0) };
//        GildedRose app = new GildedRose(items);
//        app.updateQuality();
//        assertEquals(1, app.items[0].sellIn);
//        assertEquals(1, app.items[0].quality);
//    }
//    
//    @Test
//    void sulfuras() {
//        Item[] items = new Item[] { new Item("Sulfuras, Hand of Ragnaros", -1, 80) };
//        GildedRose app = new GildedRose(items);
//        app.updateQuality();
//        assertEquals(-1, app.items[0].sellIn);
//        assertEquals(80, app.items[0].quality);
//    }

}
